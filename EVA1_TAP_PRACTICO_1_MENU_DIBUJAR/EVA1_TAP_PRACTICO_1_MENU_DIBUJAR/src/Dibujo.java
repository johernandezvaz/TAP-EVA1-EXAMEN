//import com.sun.java.swing.plaf.windows.TMSchema.Part;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.List;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.time.Year;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JFileChooser;


/**
 *
 * @authors 
 */
public class Dibujo extends javax.swing.JFrame 
implements MouseListener{
    private Point circulo1;
    private Point circulo2;
    File carpeta = new File("C:\\Archivos");
    String direccion = "";
    String rutaDirectorio = "";
            
    ArrayList<String> coordenadas = new ArrayList<>();
    ArrayList<String> coordenadas1 = new ArrayList<>();
    /**
     * Creates new form Dibujo
     */
    public Dibujo() {
        initComponents();
        cnvDibujo.addMouseListener(this);
        
    }

    private void limpiarCanvas()
    {
        cnvDibujo.getGraphics().clearRect(0,0,cnvDibujo.getWidth(),cnvDibujo.getHeight());
    }
    
    public class verificarArchivo
    {
        //File archivoDestino = new File(carpeta, archivo.getSubmitedFileName());
        
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        pnlMain = new javax.swing.JPanel();
        btnCerrar = new javax.swing.JButton();
        cnvDibujo = new java.awt.Canvas();
        jScrollPane2 = new javax.swing.JScrollPane();
        txaCoords = new javax.swing.JTextArea();
        mnuVentana = new javax.swing.JMenuBar();
        mnuArchivo = new javax.swing.JMenu();
        itmGuardar = new javax.swing.JMenuItem();
        itmAbrir = new javax.swing.JMenuItem();
        itmGuardarComo = new javax.swing.JMenuItem();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlMain.setBackground(new java.awt.Color(255, 255, 255));

        btnCerrar.setText("Cerrar Figura");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        txaCoords.setColumns(20);
        txaCoords.setRows(5);
        jScrollPane2.setViewportView(txaCoords);

        javax.swing.GroupLayout pnlMainLayout = new javax.swing.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cnvDibujo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnCerrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(122, 122, 122))
        );
        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(btnCerrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cnvDibujo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mnuArchivo.setText("Archivo");
        mnuArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuArchivoActionPerformed(evt);
            }
        });

        itmGuardar.setText("Guardar");
        itmGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itmGuardarMouseClicked(evt);
            }
        });
        itmGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmGuardarActionPerformed(evt);
            }
        });
        mnuArchivo.add(itmGuardar);

        itmAbrir.setText("Abrir");
        itmAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmAbrirActionPerformed(evt);
            }
        });
        mnuArchivo.add(itmAbrir);

        itmGuardarComo.setText("Guardar Como");
        itmGuardarComo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmGuardarComoActionPerformed(evt);
            }
        });
        mnuArchivo.add(itmGuardarComo);

        mnuVentana.add(mnuArchivo);

        setJMenuBar(mnuVentana);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed

        Graphics grp = cnvDibujo.getGraphics();
        if(circulo1 != null){
            grp.drawLine(circulo1.x, circulo1.y, circulo2.x, circulo2.y);
        }
            
        
// TODO add your handling code here:
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void itmGuardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itmGuardarMouseClicked

    }//GEN-LAST:event_itmGuardarMouseClicked

    private void mnuArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuArchivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mnuArchivoActionPerformed

    private void itmGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmGuardarActionPerformed
        // TODO add your handling code here:
        File directorio = new File(rutaDirectorio);
        if (directorio.exists()) 
        {
             try {
                    // Crear una instancia de File y FileWriter para sobreescribir el archivo
                    File archivo = new File(rutaDirectorio);
                    FileWriter escritor = new FileWriter(archivo);

                    // Escribir el contenido en el archivo
                    escritor.write(txaCoords.getText());

                    // Cerrar el escritor
                    escritor.close();

                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            // El directorio existe, puedes realizar operaciones en él aquí
            // Por ejemplo, listar archivos en el directorio:
            File[] archivos = directorio.listFiles();
            if (archivos != null) 
            {
                for (File archivo : archivos) 
                {
                    System.out.println(archivo.getName());
                }
            }
        } else {
        String path = "C:\\Archivos";
        JFileChooser jfcGuardarCoordenadas = new JFileChooser("C:\\Archivos");
        int operacion = jfcGuardarCoordenadas.showSaveDialog(pnlMain);
        
        
        
        if(operacion == JFileChooser.APPROVE_OPTION){
            BufferedWriter bw = null;
            OutputStream os = null;  
            
            try {
                 os = Files.newOutputStream(jfcGuardarCoordenadas.getSelectedFile().toPath());
                 OutputStreamWriter osw = new OutputStreamWriter(os);
                 bw = new BufferedWriter(osw);
                 txaCoords.write(bw);
            } catch (IOException ex) {
                ex.printStackTrace();
            } finally{
                try{
                    if (bw!= null){
                        bw.close();
                        os.close();
                    }
                }catch(IOException ex){
                    ex.printStackTrace();
                }
            }
        }
        }
    }//GEN-LAST:event_itmGuardarActionPerformed

    private void itmAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmAbrirActionPerformed
        
        
        JFileChooser jfcAbrirArch = new JFileChooser(carpeta);
        int operacion = jfcAbrirArch.showOpenDialog(this);
        
        if(operacion == JFileChooser.APPROVE_OPTION){
            BufferedReader br = null;
            InputStream is = null;

            File directorioSeleccionado = jfcAbrirArch.getSelectedFile();
            rutaDirectorio = directorioSeleccionado.getAbsolutePath();
            //directorioLabel.setText("Directorio seleccionado: " + rutaDirectorio);
            
            
            try {
                limpiarCanvas();
                
                
                
                is = Files.newInputStream(jfcAbrirArch.getSelectedFile().toPath());
                InputStreamReader isr = new InputStreamReader(is);
                br = new BufferedReader(isr);
                txaCoords.read(br, "Abrir Archivo");
                
                String conversion = txaCoords.getText();
                
                String cleanString = conversion.substring(1, conversion.length() - 1);
                String[] arregloPrueba= cleanString.split(",\\s*");
                ArrayList<String> arrayList = new ArrayList<>(Arrays.asList(arregloPrueba));
                System.out.println(cleanString);
                
                coordenadas = arrayList;
                
                Graphics grp = cnvDibujo.getGraphics();
                
                int x1 = 0, y1 = 0, x2 = 0, y2 =0;
                
                for(int i=3;i<arrayList.size();i+=4)
                {
                    x1 = Integer.parseInt(arrayList.get(i-3));
                    y1 = Integer.parseInt(arrayList.get(i-2));
                    x2 = Integer.parseInt(arrayList.get(i-1));
                    y2 = Integer.parseInt(arrayList.get(i));
                    grp.drawLine(x1, y1, x2, y2);
                }
                int nuevo1 = Integer.parseInt(arrayList.get(arrayList.size()-2));
                int nuevo2 = Integer.parseInt(arrayList.get(arrayList.size()-1));
                System.out.println(nuevo1);
                System.out.println(nuevo2);
                circulo1 = new Point(nuevo1 , nuevo2);     
                guardarCoord = new Point(nuevo1,nuevo2);
                circulo2 = new Point(nuevo1,nuevo2);
                guardarCoord = new Point(nuevo1,nuevo2);
                
            } catch (IOException ex) {
                ex.printStackTrace();
            } finally{
                try{
                    if (br!= null){
                        br.close();
                        is.close();
                    }
                }catch(IOException ex){
                    ex.printStackTrace();
                }
                
            }
            
        }
            
    }//GEN-LAST:event_itmAbrirActionPerformed

    private void itmGuardarComoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmGuardarComoActionPerformed
        // TODO add your handling code here:
        String path = "C:\\Archivos";
        JFileChooser jfcGuardarCoordenadas = new JFileChooser("C:\\Archivos");
        int operacion = jfcGuardarCoordenadas.showSaveDialog(pnlMain);
        
        if(operacion == JFileChooser.APPROVE_OPTION){
            BufferedWriter bw = null;
            OutputStream os = null;  
            
            try {
                 os = Files.newOutputStream(jfcGuardarCoordenadas.getSelectedFile().toPath());
                 OutputStreamWriter osw = new OutputStreamWriter(os);
                 bw = new BufferedWriter(osw);
                 txaCoords.write(bw);
            } catch (IOException ex) {
                ex.printStackTrace();
            } finally{
                try{
                    if (bw!= null){
                        bw.close();
                        os.close();
                    }
                }catch(IOException ex){
                    ex.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_itmGuardarComoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dibujo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dibujo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dibujo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dibujo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dibujo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrar;
    private java.awt.Canvas cnvDibujo;
    private javax.swing.JMenuItem itmAbrir;
    private javax.swing.JMenuItem itmGuardar;
    private javax.swing.JMenuItem itmGuardarComo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JMenu mnuArchivo;
    private javax.swing.JMenuBar mnuVentana;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JTextArea txaCoords;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseClicked(MouseEvent e) {
        Point coord = e.getPoint();
    Graphics grp = cnvDibujo.getGraphics();
    grp.drawOval(coord.x - 2, coord.y - 2, 4, 4);

    
    if(guardarCoord != null){//cuando no es el primer if
        
        String x1 = Integer.toString(coord.x);
        String y1 = Integer.toString(coord.y);
        String x2 = Integer.toString(guardarCoord.x);
        String y2 = Integer.toString(guardarCoord.y);
        grp.drawLine(guardarCoord.x, guardarCoord.y, coord.x, coord.y);
        coordenadas.add(x1);
        coordenadas.add(y1);
        coordenadas.add(x2);
        coordenadas.add(y2);
        //for(int i;i=10;i++)
        txaCoords.setText(coordenadas.toString());
    }else
        
       circulo1 = coord;
       guardarCoord = coord;
       circulo2 = coord;
       guardarCoord = coord;
    }
    Point guardarCoord = null;
    
//throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    
    @Override
    public void mousePressed(MouseEvent e) {
       
        
//throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseReleased(MouseEvent e) {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseEntered(MouseEvent e) {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseExited(MouseEvent e) {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}

